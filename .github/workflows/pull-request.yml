name: Java CI with Maven

on:
  pull_request:
    branches:
      - develop

# Ensure only one build changes dev environment at the same time
concurrency: dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the software
        uses: actions/checkout@v4
        with:
          ssh-key: ${{secrets.ACTIONS_KEY}}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "adopt"
          cache: maven

      - name: Check version format for PR to develop
        if: github.event.pull_request.base.ref == 'develop'
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+-SNAPSHOT$ ]]; then
            echo "Version $VERSION is not in the correct format. It should be #.#.#-SNAPSHOT."
            exit 1
          fi

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.0

      - name: Set up Toolchain
        shell: bash
        run: |
          echo BASE_TAG=`mvn help:evaluate -Dexpression=project.version -q -DforceStdout` >> $GITHUB_ENV
          echo COMPUTERNAME=`hostname` >> $GITHUB_ENV
          npm install -g newman-reporter-junitfull
          npm install -g xunit-viewer
          mkdir -p ~/.m2
          cat << EOF > ~/.m2/settings.xml
          <?xml version="1.0" encoding="UTF-8"?><settings><servers><server><id>github</id><username>${{secrets.GH_IZG_CORE_USER}}</username><password>${{secrets.GH_IZG_CORE_TOKEN}}</password></server></servers></settings>
          EOF
          cat << EOF > ~/.m2/toolchains.xml
          <?xml version="1.0" encoding="UTF8"?>
          <toolchains>
            <toolchain>
              <type>jdk</type>
                <provides>
                  <version>11</version>
                  <vendor>sun</vendor>
                </provides>
                <configuration>
                  <jdkHome>$JAVA_HOME_11_X64</jdkHome>
                </configuration>
            </toolchain>            
            <toolchain>
              <type>jdk</type>
                <provides>
                  <version>17</version>
                  <vendor>sun</vendor>
                </provides>
                <configuration>
                  <jdkHome>$JAVA_HOME_17_X64</jdkHome>
                </configuration>
            </toolchain>            
          </toolchains>
          EOF

      - name: Sets env vars for push or pull request to release branch (default behavior)
        run: |
          echo IMAGE_TAG=`mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed "s/-SNAPSHOT$/-SNAPSHOT-${{github.run_number}}/"` >> $GITHUB_ENV
          echo IMAGE_BRANCH_TAG=`mvn help:evaluate -Dexpression=project.version -q -DforceStdout` >> $GITHUB_ENV
          # default to force a revision check unless releasing
          echo DO_REVISION_CHECK=true >> $GITHUB_ENV
          # Skip dependency check
          echo SKIP_DEPENDENCY_CHECK=true >> $GITHUB_ENV

      - name: Print all environment variables
        run: printenv

      - name: Maven Install
        env:
          COMMON_PASS: ${{ secrets.COMMON_PASS }}
          ELASTIC_API_KEY: ${{ secrets.ELASTIC_API_KEY }}
          SSL_SHARE: ${{ github.workspace }}/target

        run: |
          env && mvn -B clean package install -Dbuildno=${{github.run_number}} \
              -DdoRevisionCheck=${{env.DO_REVISION_CHECK}} \
              -DskipDependencyCheck=${{env.SKIP_DEPENDENCY_CHECK}} \
              -Dimage.tag=$IMAGE_BRANCH_TAG
