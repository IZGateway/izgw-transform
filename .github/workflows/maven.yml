name: Java CI with Maven

on:
  pull_request:
    branches:
      - develop
      - Release*
      - main

  push:
    branches:
      - develop
      - Release*
      - main
      - version-test

# Ensure only one build changes dev environment at the same time
concurrency: dev

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the software
        uses: actions/checkout@v4
        with:
          ssh-key: ${{secrets.ACTIONS_KEY}}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "adopt"
          cache: maven

      - name: Check version format
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Version $VERSION is not in the correct format. It should be #.#.#"
            exit 1
          fi

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.0

      - name: Set up Toolchain
        shell: bash
        run: |
          echo BASE_TAG=`mvn help:evaluate -Dexpression=project.version -q -DforceStdout` >> $GITHUB_ENV
          echo COMPUTERNAME=`hostname` >> $GITHUB_ENV
          npm install -g newman-reporter-junitfull
          npm install -g xunit-viewer
          mkdir -p ~/.m2
          cat << EOF > ~/.m2/settings.xml
          <?xml version="1.0" encoding="UTF-8"?><settings><servers><server><id>github</id><username>${{ env.GITHUB_ACTOR }}</username><password>${{ secrets.IZGW_ALL_REPO_ACCESS_TOKEN }}</password></server></servers></settings>
          EOF
          cat << EOF > ~/.m2/toolchains.xml
          <?xml version="1.0" encoding="UTF8"?>
          <toolchains>
            <toolchain>
              <type>jdk</type>
                <provides>
                  <version>11</version>
                  <vendor>sun</vendor>
                </provides>
                <configuration>
                  <jdkHome>$JAVA_HOME_11_X64</jdkHome>
                </configuration>
            </toolchain>            
            <toolchain>
              <type>jdk</type>
                <provides>
                  <version>17</version>
                  <vendor>sun</vendor>
                </provides>
                <configuration>
                  <jdkHome>$JAVA_HOME_17_X64</jdkHome>
                </configuration>
            </toolchain>            
          </toolchains>
          EOF

      - name: Output target branch
        run: |
          echo "github.event.pull_request.base.ref: ${{ github.event.pull_request.base.ref }}"
          echo "github.ref: ${{ github.ref }}"
          echo "github.event_name: ${{ github.event_name }}"

      - name: Set version example
        if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/version-test' )  }}
        run: |
          echo "Setting the snapshot version"
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          NEW_VERSION="${CURRENT_VERSION}-PAULTEST"
          if [[ "$CURRENT_VERSION" != *"-PAULTEST" ]]; then
            echo VERSION="${NEW_VERSION}" >> $GITHUB_ENV
            mvn versions:set -DnewVersion=$NEW_VERSION
            mvn versions:commit
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git add pom.xml
            git commit -m "Set version to $NEW_VERSION"
            git push origin version-test
          else
            echo "Version already set to $NEW_VERSION"
          fi